@using Entity_Layer.Concrete
@model Ticket
@{
    ViewData["Title"] = "Update Test";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Top header -->
<header class="navbar-toggler">
    <p class="w3-left text-dark font-weight-bolder" style="font-size:20px">Update Test</p>
</header>
<hr />

@using (Html.BeginForm("UpdateTicket", "Ticket", FormMethod.Post))
{
    @Html.HiddenFor(model => model.TicketId, new { @class = "form-control" })
    @Html.HiddenFor(model => model.TicketIdentifier, new { @class = "form-control" })
    @Html.LabelFor(model => model.Title, "Title")
    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    <br />
    @Html.LabelFor(model => model.UserId, "Assignee")
    @Html.DropDownListFor(model => model.UserId, (List<SelectListItem>)ViewBag.users, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
    <br />
    @Html.LabelFor(model => model.TicketType, "Ticket Type")
    @Html.DropDownListFor(model => model.TicketType, Enum.GetNames(typeof(TicketTypes)).Select(e => new SelectListItem { Text = e }), new { @class = "form-control" })
    <br />
    @Html.LabelFor(model => model.ColumnId, "Situation")
    @Html.DropDownListFor(model => model.ColumnId, (List<SelectListItem>)ViewBag.columns, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ColumnId, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Description")
    @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Priority")
    @Html.TextBoxFor(x => x.Priority, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Priority, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Estimated Time (Which day the test will be on Done column)")
    @Html.EditorFor(model => model.EstimatedTime, new { style="margin-left:25px;",@type="date", @class = "form-control datepicker",  @Value = Model.EstimatedTime.ToString("gg-aa-yyyy") } )
    @Html.ValidationMessageFor(model => model.EstimatedTime, "", new { @class = "text-danger" })
    <br />
    <button id="UpdateButton" onclick="return confirm('You are going to update the Test, are you sure?');" class="btn btn-warning mb-3">Update<i class="fa fa-recycle m-1" style="font-size:15px"></i></button>

}


